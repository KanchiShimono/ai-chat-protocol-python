[project]
name = "ai-chat-protocol"
version = "0.0.1"
description = "A library + API spec for easily streaming generative AI output to your chat applications."
readme = "README.md"
requires-python = ">=3.12"
dependencies = []

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = []


[tool.ruff]
line-length = 120

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = ["F", "E", "W", "C90", "I", "N", "T201", "T203", "Q", "TCH004", "ARG"]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["ai_chat_protocol"]

[tool.ruff.lint.mccabe]
max-complexity = 10


[tool.mypy]
namespace_packages = true
show_column_numbers = true
ignore_missing_imports = true
# The fllowing options are enabled by --strict option
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true


[tool.pyright]
include = ["src", "tests"]
exclude = ["**/__pycache__"]
strictListInference = true
strictDictionaryInference = true
strictParameterNoneValue = true
reportMissingImports = true
reportMissingTypeStubs = false
reportUnusedImport = true
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedVariable = true
reportDuplicateImport = true
executionEnvironments = [
  { "root" = "src" },
  { "root" = "tests", "extraPaths" = ["src"] },
]
